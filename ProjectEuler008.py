#Project Euler, Problem 8
#Largest product in a series

"""The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832
    7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843
    8586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557
    6689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749
    3035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776
    6572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397
    5369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474
    8216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586
    1786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408
    0719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606
    0588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
"""

import time

examplenum = 731671765313306249192251196744265747423553491949349698352031277450632623957831801698480186947885184385861560789112949495459501737958331952853208805511125406987471585238630507156932909632952274430435576689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749303589072962904915604407723907138105158593079608667017242712188399879790879227492190169972088809377665727333001053367881220235421809751254540594752243525849077116705560136048395864467063244157221553975369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474821663704844031998900088952434506585412275886668811642717147992444292823086346567481391912316282458617866458359124566529476545682848912883142607690042242190226710556263211111093705442175069416589604080719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606058861164671094050775410022569831552000559357297257163626956188267042825248360082325753042075296345

def makelist(number): #makes any number a list of digits
    listn = [int(y) for y in str(number)]
    return listn

def multilist(listofnums): #makes a list of digits a multiple
    total = 1
    for a in listofnums:
        total = total * a
    return total

def largestproduct(num):
    large = 1
    for i in range(len(str(num))-13):
        any13 = multilist(makelist(num)[i:i+13])
        if any13 > large:
            large = any13
    return large

start = time.time()
print(largestproduct(examplenum))
print(time.time() - start)
#23514624000 in 0.14548754692077637 secs
